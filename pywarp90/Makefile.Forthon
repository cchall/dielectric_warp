#DEBUG = -g --fargs "-ftrace=full -freal=nan -fbounds-check"
DEBUG = #-g #--fargs "-CB -traceback"
FCOMP =
SO = so
PUBLICHOME = 
FORTHON = Forthon
PYTHON = python

all: toppy.$(SO) envpy.$(SO) w3dpy.$(SO) f3dpy.$(SO) wxypy.$(SO) fxypy.$(SO) wrzpy.$(SO) frzpy.$(SO) herpy.$(SO) cirpy.$(SO) chopy.$(SO) em2dpy.$(SO) em3dpy.$(SO) ranffortran.c
	rm -f warpC.so
	$(PYTHON) setup.py $(FCOMP) build --build-platlib .
	mv warpC.so ../scripts

toppy.$(SO): top.F top_lattice.F top_fsl.F dtop.F top.v
	$(FORTHON) -a $(FCOMP) $(DEBUG) top top_lattice.F top_fsl.F dtop.F

envpy.$(SO): toppy.$(SO) env.F env.v
	$(FORTHON) -a $(FCOMP) $(DEBUG) env

w3dpy.$(SO): toppy.$(SO) w3d.F dw3d.F w3d_injection.F w3d_interp.F w3d_collisions.F w3d_utilities.F w3d_load.F w3d.v
	$(FORTHON) -a $(FCOMP) $(DEBUG) --macros top.v w3d dw3d.F w3d_injection.F w3d_interp.F w3d_collisions.F w3d_load.F w3d_utilities.F 

f3dpy.$(SO): toppy.$(SO) w3dpy.$(SO) f3d.F f3d_mgrid.F f3d_ImplicitES.F f3d_mgrid_be.F f3d_bfield.F f3d_conductors.F util.F fft.F f3d.v
	$(FORTHON) -a $(FCOMP) $(DEBUG) --macros top.v f3d f3d_mgrid.F f3d_ImplicitES.F f3d_mgrid_be.F f3d_bfield.F f3d_conductors.F util.F fft.F

wxypy.$(SO): toppy.$(SO) wxy.F wxy.v
	$(FORTHON) -a $(FCOMP) $(DEBUG) wxy

fxypy.$(SO): toppy.$(SO) fxy.F fxy_mgrid.F fxy.v
	$(FORTHON) -a $(FCOMP) $(DEBUG) fxy fxy_mgrid.F

wrzpy.$(SO): toppy.$(SO) wrz.F dwrz.F wrz.v
	$(FORTHON) -a $(FCOMP) $(DEBUG) --macros top.v wrz dwrz.F

frzpy.$(SO): toppy.$(SO) w3dpy.$(SO) frz.F frz_mgrid.F90 frz_mgrid_be.F frz_ImplicitES.F frz.v
	$(FORTHON) -a $(FCOMP) $(DEBUG) frz frz_mgrid.F90 frz_mgrid_be.F frz_ImplicitES.F

herpy.$(SO): toppy.$(SO) her.F her.v
	$(FORTHON) -a $(FCOMP) $(DEBUG) her

cirpy.$(SO): toppy.$(SO) cir.F cir.v
	$(FORTHON) -a $(FCOMP) $(DEBUG) cir

chopy.$(SO): toppy.$(SO) cho.F cho.v
	$(FORTHON) -a $(FCOMP) $(DEBUG) cho

em2dpy.$(SO): toppy.$(SO) em2d.F90 em2d_apml.F90 em2d_apml_cummer.F90 em2d_maxwell.F90 em2d.v
	$(FORTHON) -a $(FCOMP) $(DEBUG) em2d em2d_apml.F90 em2d_apml_cummer.F90 em2d_maxwell.F90

em3dpy.$(SO): toppy.$(SO) em3d.F90 em3d_maxwell.F90 em3d.v
	$(FORTHON) -a $(FCOMP) $(DEBUG) em3d em3d_maxwell.F90

ranffortran.c: ranffortran.m
	$(PYTHON) -c "from Forthon.preprocess import main;main()" --f90 ranffortran.m ranffortran.c

public: all
	publishpywarp90.py $(PUBLICHOME)

update:
	for dir in $(PUBLICHOME); do \
	  cd $$dir; \
	  cvs update; \
	done

clean:
	rm -rf build *.so *.o

#----------------------------------------------------------------------------
#--- Build command for opendx wrapper.
DX: pyDXObject.c
	$(PYTHON) DXsetup.py build --build-platlib .
	#cp pyDXObject.so /home/grote/scriptsnew

#----------------------------------------------------------------------------


